- name: Parsing Cisco ASA config
  hosts: localhost
  gather_facts: false

  tasks:
  ## 1 - Network resource modules
    - block: 
      - name: Parse ACLs for provided configuration      
        cisco.asa.asa_acls:
          running_config: "{{ lookup('file', config) }}"
          state: parsed
        ignore_errors: true
        register: asa_acls

      - name: Parse object groups for provided configuration      
        cisco.asa.asa_ogs:
          # Remove descriptions: https://github.com/ansible-collections/cisco.asa/issues/202
          running_config: "{{ lookup('file', config) | replace('description ','')}}"
          state: parsed
        ignore_errors: true
        register: asa_ogs      
      vars:
        ansible_connection: ansible.netcommon.network_cli
        ansible_network_os: cisco.asa.asa

    - name: Save ACLs config
      ansible.builtin.copy:
        content: "{{ asa_acls.parsed.acls | default('N/A') | ansible.builtin.to_nice_yaml }}"
        dest: /output/asa_acls.cfg

    - name: Save object groups config
      ansible.builtin.copy:
        content: "{{ asa_ogs.parsed | default('N/A') | ansible.builtin.to_nice_yaml }}"
        dest: /output/asa_object_groups.cfg

  ## 2 - NTC Templates
    - name: Parse config with ntc_templates
      ansible.utils.cli_parse:
        text: "{{ lookup('file', config) }}"
        parser:
          name: ansible.netcommon.ntc_templates
          os: cisco_asa
          command: "show running-config {{ ( item ) | replace('_',' ') }}"
        set_fact: "{{ item | replace('-','_') }}"
      loop:
        - ipsec
        - crypto_ikev1
        - tunnel-group
        # - crypto_map
        # - all_crypto_map
        # - object_network

    - name: Save config parsed with ntc_templates
      ansible.builtin.copy:
        content: "{{ item.content | ansible.builtin.to_nice_yaml }}"
        dest: "/output/asa_{{ item.name }}.cfg"
      loop:
        - name: ipsec
          content: "{{ ipsec }}"
        - name: crypto_ikev1 
          content: "{{ crypto_ikev1 }}"
        - name: tunnel_group 
          content: "{{ tunnel_group }}"
        # The following templates are picky about how the output starts
        # - name: crypto_map 
        #   content: "{{ crypto_map }}"
        # - "{{ all_crypto_map }}"
        # - "{{ object_network }}"

  ## 3 - Native parser
    - name: Parse config with native parser
      ansible.utils.cli_parse:
        text: "{{ lookup('file', config) }}"
        parser:
          name: ansible.netcommon.native
          os: cisco_asa
          command: "{{ ( item ) | replace('_',' ') }}"
        set_fact: "{{ item | replace('-','_') }}"
      loop:
        - object
        - object_group

    - name: Save configs parsed with native parser
      ansible.builtin.copy:
        content: "{{ item.content | ansible.builtin.to_nice_yaml }}"
        dest: "/output/asa_{{ item.name }}.cfg"
      loop:
        - name: object
          content: "{{ object.values() | list  }}"
        - name: object_group 
          content: "{{ object_group.values() | list  }}"
